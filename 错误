docker: Error response from daemon: Ports are not available: exposing port TCP 0.0.0.0:8000 -> 127.0.0.1:0: listen tcp 0.0.0.0:8000: bind: An attempt was made to access a socket in a way forbidden by its access permissions.  

 ollama create qwq-32b -f  C:\Users\Administrator\Downloads\Modelfile
Error: Head "http://0.0.0.0:11434/": read tcp 10.53.2.36:53117->172.16.67.168:8080: wsarecv: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.  


set NO_PROXY=localhost,127.0.0.1
ollama create qwq-32b -f  C:\Users\Administrator\Downloads\Modelfile  

docker run -d -p 8080:8000 --name pdf_tool_api pdf-api-tool  
Unable to find image 'pdf_api_tool:latest' locally
docker: Error response from daemon: failed to resolve reference "docker.io/library/pdf_api_tool:latest": unexpected status from HEAD request to http://hub-mirror.c.163.com/v2/library/pdf_api_tool/manifests/latest?ns=docker.io: 504 Gateway Time-out

* Serving Flask app 'app'
 * Debug mode: off
以一种访问权限不允许的方式做了一个访问套接字的尝试。

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF 剪裁与转换工具</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .main-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }
        .drag-drop-area {
            border: 2px dashed #ccc;
            border-radius: 10px;
            padding: 30px;
            text-align: center;
            margin-bottom: 20px;
            cursor: pointer;
            transition: all 0.3s;
        }
        .drag-drop-area:hover {
            border-color: #0d6efd;
            background-color: #f8f9fa;
        }
        .drag-drop-area.active {
            border-color: #0d6efd;
            background-color: #e9ecef;
        }
        .tab-content {
            padding: 20px 0;
        }
        .preview-container {
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 20px;
            background-color: #f8f9fa;
        }
        .preview-page {
            margin-bottom: 15px;
            page-break-after: always;
        }
        .function-panel {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        .nav-tabs .nav-link.active {
            font-weight: bold;
            color: #0d6efd;
        }
        .progress-bar {
            height: 5px;
            margin-bottom: 20px;
        }
        .btn-process {
            background-color: #28a745;
            border-color: #28a745;
        }
        .btn-process:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
        .file-info {
            margin-top: 10px;
            font-size: 0.9em;
            color: #6c757d;
        }
        .pdf-viewer {
            width: 100%;
            height: 600px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="main-container">
        <div class="text-center mb-4">
            <h1><i class="bi bi-file-pdf"></i> PDF 剪裁与转换工具</h1>
            <p class="lead">上传PDF文件，剪裁页眉页脚并转换为结构化数据</p>
        </div>

        <div class="row">
            <!-- 文件上传区域 -->
            <div class="col-md-4">
                <div class="function-panel">
                    <h5><i class="bi bi-upload"></i> 上传PDF文件</h5>
                    <hr>
                    <div class="drag-drop-area" id="dropArea">
                        <p><i class="bi bi-cloud-arrow-up" style="font-size: 2rem;"></i></p>
                        <p>拖放PDF文件到这里或点击选择文件</p>
                        <input type="file" id="fileInput" accept=".pdf" hidden>
                        <label for="fileInput" class="btn btn-outline-primary mt-2">
                            <i class="bi bi-folder-plus"></i> 选择文件
                        </label>
                        <div class="file-info mt-2" id="fileInfo"></div>
                    </div>

                    <div class="mt-4">
                        <h5><i class="bi bi-scissors"></i> 剪裁设置</h5>
                        <hr>
                        <div class="mb-3">
                            <label for="topMargin" class="form-label">页眉剪裁 (cm)</label>
                            <input type="number" class="form-control" id="topMargin" step="0.1" value="2.5" min="0">
                        </div>
                        <div class="mb-3">
                            <label for="bottomMargin" class="form-label">页尾剪裁 (cm)</label>
                            <input type="number" class="form-control" id="bottomMargin" step="0.1" value="2.5" min="0">
                        </div>
                    </div>

                    <button id="processBtn" class="btn btn-process w-100" disabled>
                        <i class="bi bi-play-fill"></i> 开始处理
                    </button>
                </div>
            </div>

            <!-- 处理区域 -->
            <div class="col-md-8">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="preview-tab" data-bs-toggle="tab" data-bs-target="#preview" type="button" role="tab" aria-controls="preview" aria-selected="true">预览</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="result-tab" data-bs-toggle="tab" data-bs-target="#result" type="button" role="tab" aria-controls="result" aria-selected="false">结果</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings" type="button" role="tab" aria-controls="settings" aria-selected="false">设置</button>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <!-- 预览标签页 -->
                    <div class="tab-pane fade show active" id="preview" role="tabpanel" aria-labelledby="preview-tab">
                        <div class="preview-container">
                            <h6><i class="bi bi-eye"></i> PDF预览</h6>
                            <div id="pdfPreview" class="pdf-viewer">
                                <div class="text-center text-muted py-5">
                                    <i class="bi bi-file-earmark-pdf" style="font-size: 3rem;"></i>
                                    <p class="mt-3">PDF预览将显示在这里</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- 结果标签页 -->
                    <div class="tab-pane fade" id="result" role="tabpanel" aria-labelledby="result-tab">
                        <div class="preview-container">
                            <h6><i class="bi bi-file-earmark-text"></i> 处理结果</h6>
                            <div id="resultContainer">
                                <div class="text-center text-muted py-5">
                                    <i class="bi bi-hourglass-split" style="font-size: 3rem;"></i>
                                    <p class="mt-3">处理结果将显示在这里</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- 设置标签页 -->
                    <div class="tab-pane fade" id="settings" role="tabpanel" aria-labelledby="settings-tab">
                        <div class="preview-container">
                            <h6><i class="bi bi-gear"></i> 高级设置</h6>
                            <div class="mb-3">
                                <label for="dpi" class="form-label">DPI (每英寸点数)</label>
                                <input type="number" class="form-control" id="dpi" value="300" min="72" max="600">
                                <small class="form-text text-muted">更高的DPI会提高质量但增加文件大小</small>
                            </div>
                            <div class="mb-3">
                                <label for="pageFormat" class="form-label">页面格式</label>
                                <select class="form-select" id="pageFormat">
                                    <option value="A4">A4</option>
                                    <option value="A3">A3</option>
                                    <option value="Letter">Letter</option>
                                    <option value="Legal">Legal</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="autoRotate" checked>
                                    <label class="form-check-label" for="autoRotate">自动旋转页面</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="cleanTables" checked>
                                    <label class="form-check-label" for="cleanTables">清理表格数据</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 进度条 -->
                <div class="progress mt-3" style="height: 25px;">
                    <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%">0%</div>
                </div>
            </div>
        </div>
    </div>

    <!-- 模态框 -->
    <div class="modal fade" id="processingModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><i class="bi bi-hourglass-split"></i> 处理中...</h5>
                </div>
                <div class="modal-body text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                    </div>
                    <p class="mt-3">正在处理PDF文件，请稍候...</p>
                    <div class="progress mt-3">
                        <div id="modalProgressBar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%"></div>
                    </div>
                    <p id="progressStatus" class="mt-2">初始化...</p>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.12.313/pdf.min.js"></script>
    <script>
        // 设置PDF.js worker路径
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.12.313/pdf.worker.min.js';

        // DOM元素
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('fileInput');
        const fileInfo = document.getElementById('fileInfo');
        const processBtn = document.getElementById('processBtn');
        const topMarginInput = document.getElementById('topMargin');
        const bottomMarginInput = document.getElementById('bottomMargin');
        const pdfPreview = document.getElementById('pdfPreview');
        const progressBar = document.getElementById('progressBar');
        const modalProgressBar = document.getElementById('modalProgressBar');
        const progressStatus = document.getElementById('progressStatus');
        const processingModal = new bootstrap.Modal(document.getElementById('processingModal'));

        // 拖放功能
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dropArea.classList.add('active');
        }

        function unhighlight() {
            dropArea.classList.remove('active');
        }

        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }

        // 点击区域触发文件选择
        dropArea.addEventListener('click', () => {
            fileInput.click();
        });

        // 文件选择变化
        fileInput.addEventListener('change', () => {
            handleFiles(fileInput.files);
        });

        function handleFiles(files) {
            if (files.length === 0) return;
            
            const file = files[0];
            if (file.type !== 'application/pdf') {
                alert('请选择PDF文件');
                return;
            }

            // 显示文件信息
            fileInfo.textContent = `${file.name} (${formatFileSize(file.size)})`;
            
            // 启用处理按钮
            processBtn.disabled = false;
            
            // 预览PDF
            previewPdf(file);
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // 预览PDF
        async function previewPdf(file) {
            try {
                const arrayBuffer = await file.arrayBuffer();
                const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;
                
                // 清空预览区域
                pdfPreview.innerHTML = '';
                
                // 创建预览容器
                const container = document.createElement('div');
                container.className = 'preview-container';
                
                const title = document.createElement('h6');
                title.innerHTML = '<i class="bi bi-file-earmark-pdf"></i> PDF预览';
                container.appendChild(title);
                
                // 显示前3页作为预览
                const maxPreviewPages = 3;
                for (let i = 1; i <= Math.min(pdf.numPages, maxPreviewPages); i++) {
                    const page = await pdf.getPage(i);
                    const viewport = page.getViewport({ scale: 1.0 });
                    
                    // 创建canvas元素
                    const canvas = document.createElement('canvas');
                    const context = canvas.getContext('2d');
                    canvas.className = 'preview-page';
                    canvas.style.boxShadow = '0 0 5px rgba(0,0,0,0.1)';
                    canvas.style.marginBottom = '15px';
                    
                    // 调整canvas大小
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;
                    
                    // 渲染PDF页面到canvas
                    await page.render({
                        canvasContext: context,
                        viewport: viewport
                    }).promise;
                    
                    // 添加页码
                    const pageNum = document.createElement('div');
                    pageNum.textContent = `第 ${i} 页`;
                    pageNum.style.textAlign = 'center';
                    pageNum.style.marginTop = '5px';
                    pageNum.style.color = '#6c757d';
                    pageNum.style.fontSize = '0.9em';
                    
                    container.appendChild(canvas);
                    container.appendChild(pageNum);
                }
                
                // 如果页面超过预览页数，添加提示
                if (pdf.numPages > maxPreviewPages) {
                    const morePages = document.createElement('div');
                    morePages.textContent = `... 和其他 ${pdf.numPages - maxPreviewPages} 页`;
                    morePages.style.textAlign = 'center';
                    morePages.style.color = '#6c757d';
                    morePages.style.marginTop = '10px';
                    container.appendChild(morePages);
                }
                
                pdfPreview.appendChild(container);
            } catch (error) {
                console.error('PDF预览错误:', error);
                pdfPreview.innerHTML = `
                    <div class="text-center text-danger py-5">
                        <i class="bi bi-exclamation-triangle" style="font-size: 3rem;"></i>
                        <p class="mt-3">PDF预览失败: ${error.message}</p>
                    </div>
                `;
            }
        }

        // 处理按钮点击
        processBtn.addEventListener('click', async () => {
            const file = fileInput.files[0];
            if (!file) {
                alert('请先选择PDF文件');
                return;
            }

            const topMargin = parseFloat(topMarginInput.value);
            const bottomMargin = parseFloat(bottomMarginInput.value);
            
            if (topMargin <= 0 && bottomMargin <= 0) {
                alert('页眉和页脚剪裁值必须大于0');
                return;
            }

            // 显示处理模态框
            processingModal.show();
            
            // 模拟处理进度
            simulateProcessing(file, topMargin, bottomMargin);
        });

        // 模拟处理进度（实际项目中替换为真实的API调用）
        async function simulateProcessing(file, topMargin, bottomMargin) {
            let progress = 0;
            const interval = setInterval(() => {
                progress += Math.random() * 10;
                if (progress > 100) progress = 100;
                
                progressBar.style.width = `${progress}%`;
                progressBar.textContent = `${Math.round(progress)}%`;
                
                modalProgressBar.style.width = `${progress}%`;
                
                // 更新状态信息
                if (progress < 30) {
                    progressStatus.textContent = '正在解析PDF文件...';
                } else if (progress < 70) {
                    progressStatus.textContent = '正在剪裁页面...';
                } else if (progress < 90) {
                    progressStatus.textContent = '正在转换为CSV...';
                } else {
                    progressStatus.textContent = '正在完成处理...';
                }
                
                if (progress >= 100) {
                    clearInterval(interval);
                    setTimeout(() => {
                        processingModal.hide();
                        showResults(file.name, topMargin, bottomMargin);
                    }, 500);
                }
            }, 300);
        }

        // 显示处理结果（实际项目中根据真实API响应填充）
        function showResults(fileName, topMargin, bottomMargin) {
            const resultContainer = document.getElementById('resultContainer');
            
            // 模拟结果数据
            const pageCount = Math.floor(Math.random() * 20) + 1;
            const tableCount = Math.floor(Math.random() * 10) + 1;
            const csvSize = Math.floor(Math.random() * 500) + 100;
            
            resultContainer.innerHTML = `
                <div class="alert alert-success">
                    <i class="bi bi-check-circle"></i> 处理完成！
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">文件信息</h5>
                                <p class="card-text">
                                    <i class="bi bi-file-earmark-pdf"></i> 文件名: ${fileName}<br>
                                    <i class="bi bi-layers"></i> 页数: ${pageCount} 页<br>
                                    <i class="bi bi-rulers"></i> 剪裁设置: 上 ${topMargin}cm / 下 ${bottomMargin}cm
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">处理结果</h5>
                                <p class="card-text">
                                    <i class="bi bi-file-earmark-text"></i> 表格识别: ${tableCount} 个<br>
                                    <i class="bi bi-file-earmark-csv"></i> CSV大小: ${csvSize} KB<br>
                                    <i class="bi bi-clock"></i> 处理时间: ${Math.floor(Math.random() * 10) + 1} 秒
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-grid gap-2 d-md-flex mb-3">
                    <button class="btn btn-success" onclick="downloadFile('pdf')">
                        <i class="bi bi-download"></i> 下载剪裁后PDF
                    </button>
                    <button class="btn btn-primary" onclick="downloadFile('csv')">
                        <i class="bi bi-download"></i> 下载结构化CSV
                    </button>
                </div>
                <div class="card">
                    <div class="card-header">
                        <i class="bi bi-file-earmark-text"></i> CSV数据预览
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>页码</th>
                                        <th>表格ID</th>
                                        <th>行数</th>
                                        <th>列数</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${Array.from({ length: tableCount }, (_, i) => `
                                        <tr>
                                            <td>${Math.floor(Math.random() * pageCount) + 1}</td>
                                            <td>Table_${i + 1}</td>
                                            <td>${Math.floor(Math.random() * 20) + 1}</td>
                                            <td>${Math.floor(Math.random() * 10) + 1}</td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            `;
            
            // 切换到结果标签页
            const tab = new bootstrap.Tab(document.querySelector('#result-tab'));
            tab.show();
        }

        // 下载文件函数（实际项目中替换为真实API调用）
        function downloadFile(type) {
            const fileName = fileInput.files[0].name;
            const downloadName = fileName.replace('.pdf', `_cropped.${type}`);
            alert(`正在下载 ${downloadName} (模拟)`);
        }
    </script>
</body>
</html>
